!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","jquery","angular","angular-material","angular-file-upload","stratus.components.tag","stratus.directives.singleClick","stratus.directives.validateUrl","stratus.directives.src","stratus.services.utility","stratus.services.media"],factory):factory(root.Stratus,root._,root.jQuery,root.angular)}(this,function(Stratus,_,$,angular){Stratus.Components.MediaUploader={bindings:{ngModel:"=",collection:"<",ngfMultiple:"<",fileId:"<",draggedFiles:"<",invalidFiles:"<",fileData:"<"},controller:function($http,$sce,$q,$scope,$attrs,$mdDialog,utility,media){utility.componentInitializer(this,$scope,$attrs,"media_uploader",!0);var $ctrl=this;function done(){if($ctrl.unsavedVideos){$q((resolve,reject)=>{$ctrl.videos.forEach(function(video){video.isUploaded||resolve(!0)}),resolve(!1)}).then(isUnsavedVideo=>{if(isUnsavedVideo){var confirm=$mdDialog.confirm().title("You have not saved your video information.").textContent("Are you sure you want to abandon this video before saving?").ok("Abandon Video").cancel("Cancel").multiple(!0);$mdDialog.show(confirm).then(function(){closeDialog()})}else closeDialog()})}else closeDialog()}function closeDialog(){let returnData=null;returnData=$ctrl.fileData&&"video"===$ctrl.fileData.mime?$ctrl.fileData:$ctrl.files,$mdDialog.hide(returnData)}function addExternalFile(fileType){var newFile={url:null,name:null,tags:[],description:null,isUploaded:!1};"video"===fileType?(newFile.type="URL",$ctrl.videos.push(newFile)):(newFile.service=$ctrl.services.link[0],$ctrl.links.push(newFile))}function removeExternalFile(index,fileType){fileType&&"video"===fileType?$ctrl.videos.splice(index,1):$ctrl.links.splice(index,1)}function saveOneFile(file,fileType){if(!file.isUploaded){var data={service:file.service&&file.service.value?file.service.value:"",name:file.name,tags:file.tags,description:file.description,meta:[]};if("video"===fileType)if(file.service={},"URL"===file.type){const youtubeRegex=/^((?:https?:)?\/\/)?((?:www|m)\.)?((?:youtube\.com|youtu.be))(\/(?:[\w-]+\?v=|embed\/|v\/)?)([\w-]+)(\S+)?$/g,vimeoRegex=/(https?:\/\/)?(www.)?(player.)?vimeo.com\/([a-z]*\/)*([a-z0-9]{1,11})[?]?.*/gm;file.url.match(youtubeRegex)?file.service.value=data.service="youtube":file.url.match(vimeoRegex)&&(file.service.value=data.service="vimeo"),data.url=file.url}else"Embed"===file.type&&(data.embed=file.embed);data.mime=fileType&&"video"===fileType?"video":"image/"+file.url.split(".").pop(),function(file){return $q(function(resolve,reject){let result={};if("vimeo"===file.service.value){let vimeoId=null;(url=file.url,$q(function(resolve,reject){let vimeoRegex=new RegExp(/(https?:\/\/)?(www.)?(player.)?vimeo.com\/([a-z]*\/)*([0-9]{6,11})[?]?.*/);if(vimeoRegex.test(url))resolve(vimeoRegex.exec(url)[5]);else{let vimeoMetaApiUrl=$sce.trustAsResourceUrl("https://vimeo.com/api/oembed.json?url="+url);$http.jsonp(vimeoMetaApiUrl,{jsonpCallbackParam:"callback"}).then(function(response){resolve(response.data.video_id)})}})).then(function(response){result.videoId=vimeoId=response;let vimeoApiUrl=$sce.trustAsResourceUrl("https://vimeo.com/api/v2/video/"+vimeoId+".json");$http.jsonp(vimeoApiUrl,{jsonpCallbackParam:"callback"}).then(function(response){var meta={};meta.thumbnail_small=response.data[0].thumbnail_small,meta.thumbnail_medium=response.data[0].thumbnail_medium,meta.thumbnail_large=response.data[0].thumbnail_large,result.meta=meta,resolve(result)})})}else"youtube"===file.service.value?(result.videoId=media.getYouTubeID(file.url),resolve(result)):resolve("");var url})}(file).then(function(response){response.meta&&(data.meta=response.meta),"youtube"===file.service.value&&response.videoId?data.url="https://www.youtube.com/embed/"+response.videoId:"vimeo"===file.service.value&&response.videoId&&(data.url="https://player.vimeo.com/video/"+response.videoId);($ctrl.fileId?media.updateMedia($ctrl.fileId,data):media.saveMediaUrl(data)).then(function(response){if(utility.getStatus(response).code===utility.RESPONSE_CODE.success){$ctrl.fileData&&($ctrl.fileData=response.data.payload);var type=fileType&&"video"===fileType?"videos":"links",index=$ctrl[type].indexOf(file);$ctrl[type][index].isUploaded=!0,$ctrl.unsavedVideos=!1,"videos"===type&&($ctrl[type][index].thumbnailUrl=media.getThumbnailImgOfVideo(data))}else console.error(utility.getStatus(response).code+" - "+utility.getStatus(response).message)})})}}function saveAllFiles(files,fileType){files.forEach(function(file){file.isUploaded||saveOneFile(file,fileType)})}function uploadFiles(files,invalidFiles){if($ctrl.invalidFilesMsg=[],invalidFiles&&invalidFiles.length>0&&($ctrl.uploadingFiles=!1,invalidFiles.forEach(function(file){var msg;switch(file.$error){case"maxSize":msg="Looks like one of your files is too large. You can upload files up to ";break;case"maxFiles":msg="Maximum number of files allowed up to ";break;case"pattern":msg="Sitetheory only allow file with types "}$ctrl.invalidFilesMsg=_.union($ctrl.invalidFilesMsg,[msg+file.$errorParam])})),files&&files.length>0){$ctrl.uploadingFiles=!0;var i,uploadFilePromise=[];if($ctrl.ngfMultiple)for(i=0;i<files.length;i++){var singleFile=media.fileUploader(files[i]);uploadFilePromise.push(singleFile.upload),$ctrl.files.push(singleFile)}else $ctrl.files=[media.fileUploader(files[0],$ctrl.fileId)];$q.all(uploadFilePromise).then(function(response){console.log(response),$ctrl.uploadingFiles=!1,media.getMedia($ctrl)})}}function createTag(file,query){var data={name:query};media.createTag(data).then(function(response){if(utility.getStatus(response).code===utility.RESPONSE_CODE.success){var type="video"===file.mime?"videos":"links",index=$ctrl[type].indexOf(file);$ctrl[type][index].tags.push(response.data.payload)}}),$ctrl.query=null,$("input").blur()}$ctrl.$onInit=function(){$ctrl.files=[],$ctrl.uploadingFiles=!1,$ctrl.invalidFilesMsg=[],$ctrl.services={video:[{label:"Youtube",value:"youtube"},{label:"Vimeo",value:"vimeo"}],link:[{label:"Direct Link",value:"directlink"}]},$ctrl.fileData&&"video"===$ctrl.fileData.mime?$ctrl.videos=[Object.assign($ctrl.fileData,{type:$ctrl.fileData.embed?"Embed":"URL"})]:$ctrl.videos=[{url:null,name:null,tags:[],mime:"video",description:null,isUploaded:!1,thumbnailUrl:"",type:"URL"}],$ctrl.unsavedVideos=!1,$ctrl.links=[{service:$ctrl.services.link[0],url:null,name:null,tags:[],description:null,isUploaded:!1}],$ctrl.done=done,$ctrl.uploadFiles=uploadFiles,$ctrl.createTag=createTag,$ctrl.addExternalFile=addExternalFile,$ctrl.removeExternalFile=removeExternalFile,$ctrl.saveOneFile=saveOneFile,$ctrl.saveAllFiles=saveAllFiles,uploadFiles($ctrl.draggedFiles,$ctrl.invalidFiles)},$scope.$watch("$ctrl.videos",function(newValue,oldValue){newValue!==oldValue&&($ctrl.unsavedVideos=!0)},!0)},templateUrl:Stratus.BaseUrl+Stratus.BundlePath+"components/mediaUploader"+(Stratus.Environment.get("production")?".min":"")+".html"}});