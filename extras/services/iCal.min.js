(function(root,factory){if(typeof define==="function"&&define.amd){define(["stratus","ical"],factory)}else{factory(root.Stratus)}})(this,function(Stratus,_,angular){Stratus.Services.iCal=["$provide",function($provide){$provide.factory("iCal",[function(){const ICalExpander=function(icsData,opts){opts=opts||{};this.maxIterations=opts.maxIterations!=null?opts.maxIterations:1e3;this.skipInvalidDates=opts.skipInvalidDates!=null?opts.skipInvalidDates:false;this.jCalData=ICAL.parse(icsData);this.component=new ICAL.Component(this.jCalData);this.events=this.component.getAllSubcomponents("vevent").map(vevent=>new ICAL.Event(vevent));if(this.skipInvalidDates){this.events=this.events.filter(evt=>{try{evt.startDate.toJSDate();evt.endDate.toJSDate();return true}catch(err){return false}})}};ICalExpander.prototype.between=function(after,before){const isEventWithinRange=function(startTime,endTime){return(!after||endTime>=after.getTime())&&(!before||startTime<=before.getTime())};const getTimes=function(eventOrOccurrence){const startTime=eventOrOccurrence.startDate.toJSDate().getTime();let endTime=eventOrOccurrence.endDate.toJSDate().getTime();if(eventOrOccurrence.endDate.isDate&&endTime>startTime){endTime-=1}return{startTime:startTime,endTime:endTime}};const exceptions=[];this.events.forEach(event=>{if(event.isRecurrenceException())exceptions.push(event)});const ret={events:[],occurrences:[]};this.events.filter(e=>!e.isRecurrenceException()).forEach(event=>{const exDates=[];event.component.getAllProperties("exdate").forEach(exDateProp=>{const exDate=exDateProp.getFirstValue();exDates.push(exDate.toJSDate().getTime())});if(event.isRecurring()){const iterator=event.iterator();let next;let i=0;do{i+=1;next=iterator.next();if(next){const occurrence=event.getOccurrenceDetails(next);const{startTime:startTime,endTime:endTime}=getTimes(occurrence);const isOccurrenceExcluded=exDates.indexOf(startTime)!==-1;const exception=exceptions.find(ex=>ex.uid===event.uid&&ex.recurrenceId.toJSDate().getTime()===occurrence.startDate.toJSDate().getTime());if(before&&startTime>before.getTime())break;if(isEventWithinRange(startTime,endTime)){if(exception){ret.events.push(exception)}else if(!isOccurrenceExcluded){ret.occurrences.push(occurrence)}}}}while(next&&(!this.maxIterations||i<this.maxIterations));return}const{startTime:startTime,endTime:endTime}=getTimes(event);if(isEventWithinRange(startTime,endTime))ret.events.push(event)});return ret};ICalExpander.prototype.before=function(before){return this.between(undefined,before)};ICalExpander.prototype.after=function(after){return this.between(after)};ICalExpander.prototype.all=function(){return this.between()};ICalExpander.prototype.flattenRecurringEvent=function(e){let event=this.flattenEvent(e.item);event.recurrenceId=e.recurrenceId.toJSDate();event.startDate=e.startDate.toJSDate();event.endDate=e.endDate.toJSDate();return event};ICalExpander.prototype.flattenEvent=function(e){return{startDate:e.startDate.toJSDate(),endDate:e.endDate.toJSDate(),description:e.description,title:e.summary,summary:e.summary,attendees:e.attendees,organizer:e.organizer,sequence:e.sequence,uid:e.uid,location:e.location,url:e.url,allDay:e.allDay,image:e.image}};ICalExpander.prototype.jsonEvents=function(startRange,endRange){let events;if(startRange&&endRange){events=this.between(startRange,endRange)}else{events=this.all()}const mappedEvents=events.events.map(o=>this.flattenEvent(o));const mappedOccurrences=events.occurrences.map(o=>this.flattenRecurringEvent(o));return[].concat(mappedEvents,mappedOccurrences)};ICalExpander.prototype.flattenRecurringEventForFullCalendar=function(e){let event=this.flattenEventForFullCalendar(e.item);event.start=e.startDate.toJSDate();event.end=e.endDate.toJSDate();return event};ICalExpander.prototype.flattenEventForFullCalendar=function(e){return{start:e.startDate.toJSDate(),end:e.endDate.toJSDate(),title:e.summary,summary:e.summary,description:e.description,attendees:e.attendees,organizer:e.organizer,id:e.uid,location:e.location,url:e.url,allDay:e.allDay,image:e.image}};ICalExpander.prototype.jsonEventsForFullCalendar=function(startRange,endRange){let events;if(startRange&&endRange){events=this.between(startRange,endRange)}else{events=this.all()}const mappedEvents=events.events.map(o=>this.flattenEventForFullCalendar(o));const mappedOccurrences=events.occurrences.map(o=>this.flattenRecurringEventForFullCalendar(o));return[].concat(mappedEvents,mappedOccurrences)};function registerTimezones(tzData){Object.keys(tzData).forEach(key=>{const icsData=tzData[key];const parsed=ICAL.parse(`BEGIN:VCALENDAR\nPRODID:-//tzurl.org//NONSGML Olson 2012h//EN\nVERSION:2.0\n${icsData}\nEND:VCALENDAR`);const comp=new ICAL.Component(parsed);const vTimezone=comp.getFirstSubcomponent("vtimezone");ICAL.TimezoneService.register(vTimezone)})}return{ICalExpander:ICalExpander,registerTimezones:registerTimezones}}])}]});